import { Bot } from "grammy";

// –¢–æ–∫–µ–Ω –±–µ—Ä—ë–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
const bot = new Bot(process.env.BOT_TOKEN);

// üåê –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–≤–æ–π –º–∏–Ω–∏-–∞–ø–ø (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π URL)
const MINI_APP_URL = "https://your-app.vercel.app";

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.command("start", async (ctx) => {
  const first = ctx.from?.first_name ?? "–¥—Ä—É–≥";
  const text =
    `–ü—Ä–∏–≤–µ—Ç, ${first}! üëã\n\n` +
    `–≠—Ç–æ –Ω–∞—à VPN –º–∏–Ω–∏-–∞–ø–ø.\n\n` +
    `‚ú® –ù–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º ‚Äî *30 –¥–Ω–µ–π –±–µ—Å–ø–ª–∞—Ç–Ω–æ*.\n\n` +
    `–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.`;

  await ctx.reply(text, {
    parse_mode: "Markdown",
    reply_markup: {
      inline_keyboard: [
        [
          {
            text: "üöÄ –û—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏-–∞–ø–ø",
            web_app: { url: MINI_APP_URL },
          },
        ],
      ],
    },
  });
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.start();
