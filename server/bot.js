// bot.js
import "dotenv/config";
import { Bot } from "grammy";

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ —Ç–æ–∫–µ–Ω–æ–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
export const bot = new Bot(process.env.BOT_TOKEN);

// URL –º–∏–Ω–∏-–∞–ø–ø–∞ (–º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å —á–µ—Ä–µ–∑ ENV MINI_APP_URL)
export const MINI_APP_URL =
  process.env.MINI_APP_URL || "https://ss-miniapp-frontend.vercel.app";

// –û–±—â–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–∏–Ω–∏-–∞–ø–ø–∞
function openAppKeyboard() {
  return {
    inline_keyboard: [
      [{ text: "üöÄ –û—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏-–∞–ø–ø", web_app: { url: MINI_APP_URL } }],
    ],
  };
}

/**
 * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞
 * @param {number|string} userId - Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string|Date} untilISO - –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ (ISO –∏–ª–∏ Date)
 */
export async function notifySubActivated(userId, untilISO) {
  const until = new Date(untilISO);
  const dateStr = until.toLocaleDateString("ru-RU", {
    day: "2-digit",
    month: "2-digit",
    year: "numeric",
  });

  const text =
    `‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!\n\n` +
    `–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ *${dateStr}*.\n\n` +
    `–¢–µ–ø–µ—Ä—å –≤–∞—à —Å–µ—Ä–≤–µ—Ä —Å–Ω–æ–≤–∞ –¥–æ—Å—Ç—É–ø–µ–Ω –≤–∞–º! –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ V2Box –∏ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ VPN`;

  await bot.api.sendMessage(userId, text, {
    parse_mode: "Markdown",
    reply_markup: openAppKeyboard(),
  });
}


/**
 * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: –ø–æ–¥–ø–∏—Å–∫–∞ —Å–∫–æ—Ä–æ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è (–∑–∞ 3 –¥–Ω—è / –∑–∞ 1 –¥–µ–Ω—å)
 * @param {number|string} userId - Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {number|string} daysLeft - –°–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –æ—Å—Ç–∞–ª–æ—Å—å (–æ–∂–∏–¥–∞–µ–º 3 –∏–ª–∏ 1)
 */
export async function notifySubExpiring(userId, daysLeft) {
  const n = Number(daysLeft); // –∫—Ä–∏—Ç–∏—á–Ω–æ –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ —á–∏—Å–ª—É

  let headline, cta;
  if (n === 3) {
    headline = "‚è≥ –î–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –æ—Å—Ç–∞–ª–æ—Å—å 3 –¥–Ω—è";
    cta = "–ü—Ä–æ–¥–ª–∏ —Å–µ–π—á–∞—Å, —á—Ç–æ–±—ã –Ω–µ —Ç–µ—Ä—è—Ç—å –¥–æ—Å—Ç—É–ø.";
  } else if (n === 1) {
    headline = "‚è∞ –ü–æ–¥–ø–∏—Å–∫–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –∑–∞–≤—Ç—Ä–∞";
    cta = "–£—Å–ø–µ–π –ø—Ä–æ–¥–ª–∏—Ç—å, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å –¥–æ—Å—Ç—É–ø –∑–∞–≤—Ç—Ä–∞.";
  } else {
    // –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç, –µ—Å–ª–∏ –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –±—É–¥–µ—à—å —Å–ª–∞—Ç—å –∑–∞ –¥—Ä—É–≥–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π
    headline = "‚è≥ –ü–æ–¥–ø–∏—Å–∫–∞ —Å–∫–æ—Ä–æ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è";
    cta = "–ü—Ä–æ–¥–ª–∏ –¥–æ—Å—Ç—É–ø –≤ –º–∏–Ω–∏-–∞–ø–ø–µ, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.";
  }

  const text =
    `*${headline}*\n\n` +
    `${cta}\n\n` +
    `–û—Ç–∫—Ä–æ–π –º–∏–Ω–∏-–∞–ø–ø, –≤—ã–±–µ—Ä–∏ —É–¥–æ–±–Ω—ã–π —Å—Ä–æ–∫ –∏ –æ–ø–ª–∞—Ç–∏ –≤ –ø–∞—Ä—É –∫–ª–∏–∫–æ–≤.`;

  await bot.api.sendMessage(userId, text, {
    parse_mode: "Markdown",
    reply_markup: openAppKeyboard(),
  });
}

// 3) –°–æ–æ–±—â–µ–Ω–∏–µ: –ø–æ–¥–ø–∏—Å–∫–∞ —É–∂–µ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å
export async function notifySubExpired(userId) {
  const text =
    `‚ùå –ü–æ–¥–ø–∏—Å–∫–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å.\n\n` +
    `–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è VPN –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π, –∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –Ω–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É –≤ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏. ` +
    `–≠—Ç–æ –∑–∞–π–º—ë—Ç –º–∏–Ω—É—Ç—É.`;

  await bot.api.sendMessage(userId, text, {
    parse_mode: "Markdown",
    reply_markup: openAppKeyboard(),
  });
}


// –ö–æ–º–∞–Ω–¥–∞ /start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ + –∫–Ω–æ–ø–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–∏–Ω–∏-–∞–ø–ø–∞
bot.command("start", async (ctx) => {
  const first = ctx.from?.first_name ?? "–¥—Ä—É–≥";
  const text =
    `–ü—Ä–∏–≤–µ—Ç, ${first}! üëã\n\n` +
    `–≠—Ç–æ –Ω–∞—à VPN –º–∏–Ω–∏-–∞–ø–ø.\n\n` +
    `‚ú® –ù–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º ‚Äî *30 –¥–Ω–µ–π –±–µ—Å–ø–ª–∞—Ç–Ω–æ*.\n\n` +
    `–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.`;

  await ctx.reply(text, {
    parse_mode: "Markdown",
    reply_markup: openAppKeyboard(),
  });
});

// 1) –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –æ–ø–ª–∞—Ç—É (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ), –∏–Ω–∞—á–µ Telegram –æ—Ç–º–µ–Ω–∏—Ç –ø–ª–∞—Ç—ë–∂
bot.on("pre_checkout_query", async (ctx) => {
  try {
    await ctx.answerPreCheckoutQuery(true);
  } catch (e) {
    console.error("[pre_checkout_query]", e?.description || e?.message || e);
  }
});

// 2) –£—Å–ø–µ—à–Ω–∞—è –æ–ø–ª–∞—Ç–∞ Stars ‚Üí –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å–∫—É —á–µ—Ä–µ–∑ backend
bot.on("message:successful_payment", async (ctx) => {
  try {
    const sp = ctx.message.successful_payment;
    const payload = sp.invoice_payload || ""; // –≤–∏–¥–∞: "plan=1m;userId=123"
    const p = Object.fromEntries(
      payload.split(";").map(s => s.split("=").map(x => (x || "").trim()))
    );
    const plan = p.plan || "1m";
    const userId = Number(p.userId || ctx.from.id);

    // –î–µ—Ä–≥–∞–µ–º –Ω–∞—à backend, –∫–æ—Ç–æ—Ä—ã–π –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É
    const api = process.env.API_URL; // –¥–æ–±–∞–≤—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞ Render
    if (api) {
      await fetch(api + "/api/pay/confirm", {
        method: "POST",
        headers: { "Content-Type": "application/json", "X-From-Bot": "1" },
        body: JSON.stringify({ userId, plan })
      });
    }

    await ctx.reply("‚úÖ –ü–ª–∞—Ç—ë–∂ –ø–æ–ª—É—á–µ–Ω! –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞. –û—Ç–∫—Ä–æ–π—Ç–µ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ VPN.");
  } catch (e) {
    console.error("[successful_payment]", e?.description || e?.message || e);
  }
});


// –°–Ω–∞—á–∞–ª–∞ —Å–Ω–∏–º–∞–µ–º webhook (–≤–∞–∂–Ω–æ –¥–ª—è –¥–µ–ø–ª–æ—è/—Ä–µ—Å—Ç–∞—Ä—Ç–æ–≤), –ø–æ—Ç–æ–º –∑–∞–ø—É—Å–∫–∞–µ–º long polling
try {
  await bot.api.deleteWebhook({ drop_pending_updates: true });
} catch (e) {
  console.warn('deleteWebhook warn:', e?.description || e?.message || e);
}

bot.start({ onStart: () => console.log('Bot started (long polling)') })
  .catch((e) => {
    // –ï—Å–ª–∏ –≤–¥—Ä—É–≥ race-condition –∏ —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π getUpdates ‚Äî –Ω–µ –≤–∞–ª–∏–º –ø—Ä–æ—Ü–µ—Å—Å
    if (String(e?.description || e).includes('terminated by other getUpdates')) {
      console.warn('Bot start warning: another getUpdates in progress, will keep API running');
    } else {
      throw e; // –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏ ‚Äî –ø—É—Å—Ç—å –ø–∞–¥–∞—é—Ç, —á—Ç–æ–±—ã –º—ã –∏—Ö —É–≤–∏–¥–µ–ª–∏ –≤ –ª–æ–≥–∞—Ö
    }
  });

