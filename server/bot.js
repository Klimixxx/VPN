// bot.js
import "dotenv/config";
import { Bot } from "grammy";

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ —Ç–æ–∫–µ–Ω–æ–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
export const bot = new Bot(process.env.BOT_TOKEN);

// URL –º–∏–Ω–∏-–∞–ø–ø–∞ (–º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å —á–µ—Ä–µ–∑ ENV MINI_APP_URL)
export const MINI_APP_URL =
  process.env.MINI_APP_URL || "https://ss-miniapp-frontend.vercel.app";

// –û–±—â–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–∏–Ω–∏-–∞–ø–ø–∞
function openAppKeyboard() {
  return {
    inline_keyboard: [
      [{ text: "üöÄ –û—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏-–∞–ø–ø", web_app: { url: MINI_APP_URL } }],
    ],
  };
}

/**
 * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞
 * @param {number|string} userId - Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string|Date} untilISO - –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ (ISO –∏–ª–∏ Date)
 */
export async function notifySubActivated(userId, untilISO) {
  const until = new Date(untilISO);
  const dateStr = until.toLocaleDateString("ru-RU", {
    day: "2-digit",
    month: "long",
  });

  const text =
    `‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!\n\n` +
    `–î–æ—Å—Ç—É–ø –æ—Ç–∫—Ä—ã—Ç –¥–æ *${dateStr}*.\n\n` +
    `–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–π–¥—ë—Ç –Ω–µ —Ç–∞–∫ ‚Äî –æ—Ç–∫—Ä—ã–≤–∞–π –º–∏–Ω–∏-–∞–ø–ø, —Ç–∞–º –≤—Å—ë –ø–æ–¥ —Ä—É–∫–æ–π.`;

  await bot.api.sendMessage(userId, text, {
    parse_mode: "Markdown",
    reply_markup: openAppKeyboard(),
  });
}

/**
 * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: –ø–æ–¥–ø–∏—Å–∫–∞ —Å–∫–æ—Ä–æ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è (–∑–∞ 3 –¥–Ω—è / –∑–∞ 1 –¥–µ–Ω—å)
 * @param {number|string} userId - Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {number|string} daysLeft - –°–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –æ—Å—Ç–∞–ª–æ—Å—å (–æ–∂–∏–¥–∞–µ–º 3 –∏–ª–∏ 1)
 */
export async function notifySubExpiring(userId, daysLeft) {
  const n = Number(daysLeft); // –∫—Ä–∏—Ç–∏—á–Ω–æ –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ —á–∏—Å–ª—É

  let headline, cta;
  if (n === 3) {
    headline = "‚è≥ –î–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –æ—Å—Ç–∞–ª–æ—Å—å 3 –¥–Ω—è";
    cta = "–ü—Ä–æ–¥–ª–∏ —Å–µ–π—á–∞—Å, —á—Ç–æ–±—ã –Ω–µ —Ç–µ—Ä—è—Ç—å –¥–æ—Å—Ç—É–ø.";
  } else if (n === 1) {
    headline = "‚è∞ –ü–æ–¥–ø–∏—Å–∫–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –∑–∞–≤—Ç—Ä–∞";
    cta = "–£—Å–ø–µ–π –ø—Ä–æ–¥–ª–∏—Ç—å, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å –¥–æ—Å—Ç—É–ø –∑–∞–≤—Ç—Ä–∞.";
  } else {
    // –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç, –µ—Å–ª–∏ –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –±—É–¥–µ—à—å —Å–ª–∞—Ç—å –∑–∞ –¥—Ä—É–≥–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π
    headline = "‚è≥ –ü–æ–¥–ø–∏—Å–∫–∞ —Å–∫–æ—Ä–æ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è";
    cta = "–ü—Ä–æ–¥–ª–∏ –¥–æ—Å—Ç—É–ø –≤ –º–∏–Ω–∏-–∞–ø–ø–µ, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.";
  }

  const text =
    `*${headline}*\n\n` +
    `${cta}\n\n` +
    `–û—Ç–∫—Ä–æ–π –º–∏–Ω–∏-–∞–ø–ø, –≤—ã–±–µ—Ä–∏ —É–¥–æ–±–Ω—ã–π —Å—Ä–æ–∫ –∏ –æ–ø–ª–∞—Ç–∏ –≤ –ø–∞—Ä—É –∫–ª–∏–∫–æ–≤.`;

  await bot.api.sendMessage(userId, text, {
    parse_mode: "Markdown",
    reply_markup: openAppKeyboard(),
  });
}

// –ö–æ–º–∞–Ω–¥–∞ /start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ + –∫–Ω–æ–ø–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–∏–Ω–∏-–∞–ø–ø–∞
bot.command("start", async (ctx) => {
  const first = ctx.from?.first_name ?? "–¥—Ä—É–≥";
  const text =
    `–ü—Ä–∏–≤–µ—Ç, ${first}! üëã\n\n` +
    `–≠—Ç–æ –Ω–∞—à VPN –º–∏–Ω–∏-–∞–ø–ø.\n\n` +
    `‚ú® –ù–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º ‚Äî *30 –¥–Ω–µ–π –±–µ—Å–ø–ª–∞—Ç–Ω–æ*.\n\n` +
    `–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.`;

  await ctx.reply(text, {
    parse_mode: "Markdown",
    reply_markup: openAppKeyboard(),
  });
});

// –ó–∞–ø—É—Å–∫ long polling
bot.start();
